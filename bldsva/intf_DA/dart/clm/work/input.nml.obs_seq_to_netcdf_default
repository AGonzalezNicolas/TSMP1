&assim_model_nml
   write_binary_restart_files = .true.,
   netCDF_large_file_support  = .false.
  /

&location_nml
   horiz_dist_only                 = .true.,
   vert_normalization_pressure     = 100000.0, 
   vert_normalization_height       = 10000.0,
   vert_normalization_level        = 20.0,
   vert_normalization_scale_height = 5.0,
   approximate_distance            = .false.,
   nlon                            = 71,
   nlat                            = 36,
   output_box_info                 = .false.,
   maintain_original_vert          = .false.,
/

&model_nml
   clm_restart_filename         = 'clm_restart.nc',
   clm_history_filename         = 'clm_history.nc',
   assimilation_period_days     = 1,
   assimilation_period_seconds  = 0,
   model_perturbation_amplitude = 0.2,
   output_state_vector          = .true.,
   calendar                     = 'Gregorian',
   debug                        = 0,
   clm_state_variables          = 'frac_sno',    'KIND_SNOWCOVER_FRAC',
                                  'SNOWDP',      'KIND_SNOW_THICKNESS',
                                  'T_SOISNO',    'KIND_SOIL_TEMPERATURE',
                                  'leafc',       'KIND_LEAF_CARBON'
   /

&obs_kind_nml
   assimilate_these_obs_types = 'null',
   evaluate_these_obs_types   = 'null'  
/

# note that only one of name or list can be used, and the other 
# must be set to '' to avoid ambiguity.
&obs_seq_to_netcdf_nml
   obs_sequence_name = 'obs_seq.final',
   obs_sequence_list = '',
   append_to_netcdf  = .false.,
   lonlim1    =    0.0,
   lonlim2    =  360.0,
   latlim1    =  -90.0,
   latlim2    =   90.0,
   verbose    = .false.  /

&obs_sequence_nml
   write_binary_obs_sequence = .false.  /

&schedule_nml
   calendar       = 'Gregorian',
   first_bin_start =  1601,  1,  1,  0,  0,  0,
   first_bin_end   =  2999,  1,  1,  0,  0,  0,
   last_bin_end    =  2999,  1,  1,  0,  0,  0,
   bin_interval_days    = 1000000,   
   bin_interval_seconds = 0, 
   max_num_bins         = 1000,
   print_table          = .true.
  /

&utilities_nml
   TERMLEVEL      = 1,
   logfilename    = 'dart_log.out',
   nmlfilename    = 'dart_log.nml',
   module_details = .true.,
   print_debug    = .false.,
   write_nml      = 'file'
/

