&assim_model_nml
   write_binary_restart_files = .true.,
   netCDF_large_file_support  = .false.
  /


# With a deterministic filter (filter_kind == 1 or 8)
# and a deterministic inflation (filter_nml:inf_deterministic == .true.)
# sort_obs_inc is not needed and is expensive. Should be .false.

&assim_tools_nml
   filter_kind                     = 1,
   cutoff                          = 0.2,
   sort_obs_inc                    = .false.,
   spread_restoration              = .false.,
   sampling_error_correction       = .false.,
   adaptive_localization_threshold = -1,
   adaptive_cutoff_floor           = -1.0,
   output_localization_diagnostics = .false.,
   localization_diagnostics_file   = "localization_diagnostics",
   print_every_nth_obs             = 0,
   rectangular_quadrature          = .true.,
   gaussian_likelihood_tails       = .false.,
   close_obs_caching               = .true.,
   allow_missing_in_clm            = .false.
/

# specify these in the same order, the same number of items
#   special_localization_obs_types  = "",
#   special_localization_cutoffs    = -1,

&cov_cutoff_nml
   select_localization = 1  /

&ensemble_manager_nml
   single_restart_file_in  = .true.,
   single_restart_file_out = .true.,
   perturbation_amplitude  = 0.2,
   layout = 1,
   tasks_per_node = 1,
   communication_configuration = 1,
   flag_unneeded_transposes = .false.,
   debug = .false.
 /

&location_nml
   horiz_dist_only                 = .true.,
   vert_normalization_pressure     = 100000.0, 
   vert_normalization_height       = 10000.0,
   vert_normalization_level        = 20.0,
   vert_normalization_scale_height = 5.0,
   approximate_distance            = .false.,
   nlon                            = 71,
   nlat                            = 36,
   output_box_info                 = .false.,
   maintain_original_vert          = .false.,
/

&model_nml
   clm_restart_filename         = 'clm_restart.nc',
   clm_history_filename         = 'clm_history.nc',
   assimilation_period_days     = 1,
   assimilation_period_seconds  = 0,
   model_perturbation_amplitude = 0.2,
   output_state_vector          = .true.,
   calendar                     = 'Gregorian',
   debug                        = 0,
   clm_state_variables          = 'frac_sno',    'KIND_SNOWCOVER_FRAC',
                                  'SNOWDP',      'KIND_SNOW_THICKNESS',
                                  'T_SOISNO',    'KIND_SOIL_TEMPERATURE',
                                  'leafc',       'KIND_LEAF_CARBON'
   /

&obs_kind_nml
   assimilate_these_obs_types = 'null',
   evaluate_these_obs_types   = 'null'  
/

&obs_sequence_nml
   write_binary_obs_sequence = .false.  /

&reg_factor_nml
   select_regression    = 1,
   input_reg_file       = "time_mean_reg",
   save_reg_diagnostics = .false.,
   reg_diagnostics_file = "reg_diagnostics"  /

&utilities_nml
   TERMLEVEL      = 1,
   logfilename    = 'dart_log.out',
   nmlfilename    = 'dart_log.nml',
   module_details = .true.,
   print_debug    = .false.,
   write_nml      = 'file'
/

