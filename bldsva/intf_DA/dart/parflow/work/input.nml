&perfect_model_obs_nml
   start_from_restart    = .true.
   output_restart        = .true.
   async                 = 0
   init_time_days        = -1 
   init_time_seconds     = -1
   first_obs_days        = -1
   first_obs_seconds     = -1
   last_obs_days         = -1
   last_obs_seconds      = -1
   output_interval       = 1
   restart_in_file_name  = "dart_prior"
   restart_out_file_name = "perfect_restart"
   obs_seq_in_file_name  = "obs_seq.in"
   obs_seq_out_file_name = "obs_seq.perfect"
   adv_ens_command       = "./no_way_to_advance"
   output_timestamps     = .false.
   trace_execution       = .true.
   output_forward_op_errors = .false.
   print_every_nth_obs   = -1
   silence               = .false.
   /

&filter_nml
   async                    = 0
   adv_ens_command          = "./no_way_to_advance"
   ens_size                 = __nens__
   start_from_restart       = .true.
   output_restart           = .true.
   obs_sequence_in_name     = "obs_seq.out"
   obs_sequence_out_name    = "obs_seq.final"
   restart_in_file_name     = "filter_ics"
   restart_out_file_name    = "filter_restart"
   init_time_days           = -1 
   init_time_seconds        = -1
   first_obs_days           = -1
   first_obs_seconds        = -1
   last_obs_days            = -1
   last_obs_seconds         = -1
   num_output_state_members = __nens__ 
   num_output_obs_members   = __nens__ 
   output_interval          = 1
   num_groups               = 1
   input_qc_threshold       = 3.0
   outlier_threshold        = 3.0
   output_forward_op_errors = .false.
   output_timestamps        = .false.
   output_inflation         = .true.
   trace_execution          = .true.
   silence                  = .false.

   inf_flavor                  = 0,                       0
   inf_initial_from_restart    = .false.,                 .false
   inf_sd_initial_from_restart = .false.,                 .false.
   inf_output_restart          = .true.,                  .true.
   inf_deterministic           = .true.,                  .true.
   inf_in_file_name            = 'prior_inflate_ics',     'post_inflate_ics'
   inf_out_file_name           = 'prior_inflate_restart', 'post_inflate_restart'
   inf_diag_file_name          = 'prior_inflate_diag',    'post_inflate_diag'
   inf_initial                 = 1.0,                     1.0
   inf_sd_initial              = 0.0,                     0.0
   inf_damping                 = 1.0,                     1.0
   inf_lower_bound             = 1.0,                     1.0
   inf_upper_bound             = 1000000.0,               1000000.0
   inf_sd_lower_bound          = 0.0,                     0.0
   /

&smoother_nml
   num_lags              = 0
   start_from_restart    = .false.
   output_restart        = .false.
   restart_in_file_name  = 'smoother_ics'
   restart_out_file_name = 'smoother_restart'
   /

# cutoff of 0.03 (radians) is about 200km
# cutoff changed from 0.02 to 0.0002
&assim_tools_nml
   filter_kind                     = 1
   cutoff                          = __cutrad__
   sort_obs_inc                    = .false.
   spread_restoration              = .false.
   sampling_error_correction       = .false.
   adaptive_localization_threshold = -1
   output_localization_diagnostics = .false.
   localization_diagnostics_file   = 'localization_diagnostics'
   print_every_nth_obs             = 0
   /


&ensemble_manager_nml
  single_restart_file_in  = .false.
  single_restart_file_out = .false.
  perturbation_amplitude  = 0.2
 /

&cov_cutoff_nml
   select_localization = 1
   /

&reg_factor_nml
   select_regression    = 1
   input_reg_file       = "time_mean_reg"
   save_reg_diagnostics = .false.
   reg_diagnostics_file = "reg_diagnostics"
   /

&obs_sequence_nml
   write_binary_obs_sequence = .false.
   /


&preprocess_nml
  input_obs_def_mod_file = '../../../../obs_def/DEFAULT_obs_def_mod.F90'
   output_obs_def_mod_file = '../../../../obs_def/obs_def_mod.f90'
   input_obs_kind_mod_file = '../../../../obs_kind/DEFAULT_obs_kind_mod.F90'
  output_obs_kind_mod_file = '../../../../obs_kind/obs_kind_mod.f90'
               input_files = '../../../../obs_def/obs_def_tower_mod.f90',
                             '../../../../obs_def/obs_def_COSMOS_mod.f90'
  /

&obs_kind_nml
   assimilate_these_obs_types = 'SOIL_MOISTURE'
    /

&assim_model_nml
   write_binary_restart_files = .false.
   netCDF_large_file_support  = .false.
   /

&model_nml
   parflow_press_file            = 'pfl_press.pfb'
   parflow_satur_file            = 'pfl_satur.pfb' 
   grid_file                     = 'pflgrid.nc'
   clm_file                      = 'clm_restart.nc'
   clm_file_s                    = 'clm_restart_s.nc'
   soilInd_file                  = 'pfb_soil.nc'
   parflow_assim_variable        = 'saturation'
   assimilation_period_days      = 0 
   assimilation_period_seconds   = 21400 
   debug                         = 0
   /

&pfb_to_dart_nml
   pfb_to_dart_output_file = 'dart_prior'
   /

# reduce from 1000. to 10. and 1000. to 100
&location_nml
   horiz_dist_only             = .false.
   vert_normalization_pressure = 10.0
   vert_normalization_height   = 50000.0
   vert_normalization_level    = 100.0
   approximate_distance        = .false.
   nlon                        = 71
   nlat                        = 36
   output_box_info             = .true.
  /

&dart_to_pfb_nml
   dart_to_pfb_input_file = 'dart_posterior'
   pfb_restart_filename = 'parflow_restart.pfb'
   advance_time_present     = .false.
   /

&utilities_nml
   TERMLEVEL = 1
   module_details = .false.
   logfilename = 'dart_log.out'
   nmlfilename = 'dart_log.nml'
   write_nml   = 'file'
   /


&restart_file_tool_nml
   input_file_name              = "filter_restart"
   output_file_name             = "filter_updated_restart"
   ens_size                     = 1
   single_restart_file_in       = .true.
   single_restart_file_out      = .true.
   write_binary_restart_files   = .true.
   overwrite_data_time          = .false.
   new_data_days                = -1
   new_data_secs                = -1
   input_is_model_advance_file  = .false.
   output_is_model_advance_file = .false.,
   overwrite_advance_time       = .false
   new_advance_days             = -1
   new_advance_secs             = -1,
   gregorian_cal                = .true.
   /

&schedule_nml
   calendar        = 'Gregorian'
   first_bin_start =  1997,  1,  1,  0,  0,  0
   first_bin_end   =  1998,  1,  1,  0,  0,  0
   last_bin_end    =  1998,  1,  1,  0,  0,  0
   bin_interval_days    = 7 
   bin_interval_seconds = 0
   max_num_bins         = 1000
   print_table          = .true.
   /


&obs_seq_to_netcdf_nml
   obs_sequence_name = 'obs_seq.final'
   obs_sequence_list = ''
   append_to_netcdf  = .false.
   lonlim1    =    0.0
   lonlim2    =  360.0
   latlim1    =  -90.0
   latlim2    =   90.0
   verbose    = .false.
   /

# The times in the namelist for the obs_diag program are vectors
# that follow the following sequence:
# year   month   day   hour   minute   second
# max_num_bins can be used to specify a fixed number of bins
# in which case last_bin_center should be safely in the future.
#
# Acceptable latitudes range from  [-90,  90]
# Acceptable longitudes range from [  0, Inf]

&obs_diag_nml
   obs_sequence_name = ''
   obs_sequence_list = 'obs_file_list.txt'
   first_bin_center =  2008, 5,  9, 0, 0, 0
   last_bin_center  =  2008, 5,  13, 0, 0, 0
   bin_separation   =     0, 0,  1, 0, 0, 0
   bin_width        =     0, 0,  1, 0, 0, 0
   time_to_skip     =     0, 0,  0, 0, 0, 0
   max_num_bins     = 1000
   Nregions   = 1
   lonlim1    = 5.42,  5.46, 5.72, 5.46
   lonlim2    = 5.60,  5.50, 5.79, 5.50
   latlim1    = 49.85, 49.88, 49.88, 49.84
   latlim2    = 49.95, 49.92, 49.92, 49.87
   reg_names  = 'Center', 'Left', 'Right', 'Bottom'
   hlevel     = 0.02, 0.06, 0.10, 0.20, 0.30, 0.50, 0.80
   print_mismatched_locs = .true.
   verbose               = .true.
   /

&model_mod_check_nml
   dart_input_file       = 'dart_prior'
   output_file           = 'mmc_output'
   advance_time_present  = .false.
   x_ind                 = 8000
   kind_of_interest      = 'KIND_SOIL_MOISTURE'
   verbose               = .FALSE.
   test1thru             = 9
   loc_of_interest       = 5.5730320707600001, 49.937321821019999, 0.01
   interp_test_vertcoord = 'VERTISHEIGHT'
   interp_test_lonrange  =  5.412,  5.617
   interp_test_dlon      = 0.001
   interp_test_latrange  = 49.840, 49.950
   interp_test_dlat      = 0.001
   interp_test_vertrange = 0.02, 0.50
   interp_test_dvert     = 0.01
   verbose               = .false.
   /


 longitude index to the  west and  east are           19          20
 latitude  index to the south and north are           12          13
 lonW, lon, lonE   5.5730320707600001        5.5819999999999999        5.5820249635799994     
 latS, lat, latN   49.937321821019999        49.940000000000005        49.946314713840003  
